// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"context"
	"github.com/einride/bigquery-importer-google-workspace/internal/api/bigqueryapi"
	"github.com/einride/bigquery-importer-google-workspace/internal/api/workspaceapi"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func InitApp(ctx context.Context, logger *zap.Logger, config *Config) (*App, func(), error) {
	jobConfig := config.Job
	client, cleanup, err := InitBigQueryClient(ctx, config, logger)
	if err != nil {
		return nil, nil, err
	}
	jobClient := &bigqueryapi.JobClient{
		Config:         jobConfig,
		BigQueryClient: client,
		Logger:         logger,
	}
	secretmanagerClient, cleanup2, err := InitSecretManagerClient(ctx, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service, err := InitWorkspaceClient(ctx, config, secretmanagerClient, logger)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	workspaceapiConfig := &config.Work
	workspaceClient := &workspaceapi.WorkspaceClient{
		DirectoryService: service,
		Logger:           logger,
		Config:           workspaceapiConfig,
	}
	app := &App{
		BigQueryJobClient: jobClient,
		WorkspaceClient:   workspaceClient,
		Logger:            logger,
	}
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
